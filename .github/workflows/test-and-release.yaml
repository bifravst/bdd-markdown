name: Test and Release

on:
  push:

env:
  # For chalk: https://github.com/chalk/chalk#supportscolor
  FORCE_COLOR: 3
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

jobs:
  parse:
    name: "Run parse examples"

    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install dependencies
        run: npm ci --no-audit --ignore-scripts

      - name: Parse examples
        run: |
          npx tsx parse.ts parser/test-data/feature/Example.feature.md
          npx tsx parse.ts parser/test-data/feature/Highlander.feature.md
          npx tsx parse.ts examples/mars-rover/MarsRover.feature.md

  mars-rover:
    name: "Run Mars Rover example"

    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install dependencies
        run: npm ci --no-audit --ignore-scripts

      - name: Mars Rover Example
        run: |
          npx tsx examples/mars-rover/tests.ts > mars-rover.json
          cat mars-rover.json | npx tsx reporter/console-cli.ts
          cat mars-rover.json | npx tsx reporter/markdown-cli.ts >> $GITHUB_STEP_SUMMARY

  firmware:
    name: "Run Firmware example"

    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install dependencies
        run: npm ci --no-audit --ignore-scripts

      - name: Firmware Example
        run: |
          npx tsx examples/firmware/tests.ts > firmware.json
          cat firmware.json | npx tsx reporter/console-cli.ts
          cat firmware.json | npx tsx reporter/markdown-cli.ts >> $GITHUB_STEP_SUMMARY

  tests:
    name: "Test and Release"

    needs: [parse, mars-rover, firmware]

    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install dependencies
        run: npm ci --no-audit

      - name: Compile TypeScript
        run: npx tsc

      - name: Check source code with eslint
        run: npx eslint ./

      - name: Check if source code is properly formatted
        run: npx prettier -c ./

      - name: Run Unit Tests
        run: npm test

      - name: Parse examples
        run: |
          npx tsx parse.ts parser/test-data/feature/Example.feature.md
          npx tsx parse.ts parser/test-data/feature/Highlander.feature.md
          npx tsx parse.ts examples/mars-rover/MarsRover.feature.md

      - name: Run examples
        run: |
          npx tsx examples/mars-rover/tests.ts
          npx tsx examples/firmware/tests.ts

      - name: Semantic release
        run: npx semantic-release
